{
  "name": "ng-template",
  "displayName": "Angular Language Service",
  "description": "Editor services for Angular templates",
  "version": "12.0.0-next.0",
  "publisher": "Angular",
  "icon": "angular.png",
  "license": "MIT",
  "keywords": [
    "Angular",
    "multi-root ready"
  ],
  "engines": {
    "vscode": "^1.52.0"
  },
  "categories": [
    "Programming Languages"
  ],
  "contributes": {
    "commands": [
      {
        "command": "angular.restartNgServer",
        "title": "Restart Angular Language server",
        "category": "Angular"
      },
      {
        "command": "angular.openLogFile",
        "title": "Open Angular Server log",
        "category": "Angular"
      },
      {
        "command": "angular.getTemplateTcb",
        "title": "View Template Typecheck Block",
        "category": "Angular"
      },
      {
        "command": "angular.goToComponentWithTemplateFile",
        "title": "Go to component",
        "category": "Angular"
      }
    ],
    "menus": {
      "editor/context": [
        {
          "when": "resourceLangId == html || resourceLangId == typescript",
          "command": "angular.getTemplateTcb",
          "group": "angular"
        },
        {
          "when": "resourceLangId == html",
          "command": "angular.goToComponentWithTemplateFile",
          "group": "angular"
        }
      ]
    },
    "configuration": {
      "title": "Angular Language Service",
      "properties": {
        "angular.ngdk": {
          "type": [
            "string",
            "null"
          ],
          "default": null,
          "description": "Specifies the folder path to @angular/language-service.",
          "scope": "machine"
        },
        "angular.log": {
          "type": "string",
          "enum": [
            "off",
            "terse",
            "normal",
            "verbose"
          ],
          "default": "terse",
          "description": "Enables logging of the Angular server to a file. This log can be used to diagnose Angular Server issues. The log may contain file paths, source code, and other potentially sensitive information from your project."
        },
        "angular.experimental-ivy": {
          "type": "boolean",
          "default": false,
          "description": "Opt-in to the Ivy language service. Note: To disable the Ivy language service in a workspace when it is enabled in the user settings, open the settings.json file and set the angular.experiment-ivy to false."
        },
        "angular.enable-experimental-ivy-prompt": {
          "type": "boolean",
          "default": true,
          "description": "Prompt to enable the Ivy language service for the workspace when View Engine is in use."
        },
        "angular.trace.server": {
          "type": "string",
          "scope": "window",
          "enum": [
            "off",
            "messages",
            "verbose"
          ],
          "default": "off",
          "description": "Traces the communication between VS Code and the Angular language server."
        }
      }
    },
    "grammars": [
      {
        "path": "./syntaxes/inline-template.json",
        "scopeName": "inline-template.ng",
        "injectTo": [
          "source.ts"
        ],
        "embeddedLanguages": {
          "text.html": "html",
          "source.css": "css",
          "source.js": "javascript"
        }
      },
      {
        "path": "./syntaxes/inline-styles.json",
        "scopeName": "inline-styles.ng",
        "injectTo": [
          "source.ts"
        ],
        "embeddedLanguages": {
          "source.css": "css"
        }
      },
      {
        "path": "./syntaxes/template.json",
        "scopeName": "template.ng",
        "injectTo": [
          "text.html.derivative",
          "source.ts"
        ],
        "embeddedLanguages": {
          "text.html": "html",
          "source.css": "css"
        }
      },
      {
        "path": "./syntaxes/expression.json",
        "scopeName": "expression.ng"
      }
    ]
  },
  "activationEvents": [
    "onLanguage:html",
    "onLanguage:typescript"
  ],
  "main": "./dist/client/extension",
  "scripts": {
    "compile": "yarn compile:banner && tsc -b && rollup -c",
    "compile:banner": "tsc -p server/banner.tsconfig.json && rollup -c banner.rollup.config.js",
    "compile:test": "tsc -b server/src/tests",
    "compile:integration": "tsc -b integration",
    "compile:syntaxes-test": "tsc -b syntaxes/test",
    "build:syntaxes": "tsc -b syntaxes && node dist/syntaxes/build.js",
    "format": "scripts/format.sh",
    "watch": "tsc -b -w",
    "postinstall": "vscode-install",
    "package": "rm -rf dist && node scripts/package.js",
    "test": "yarn compile:test && jasmine dist/server/tests/*_spec.js",
    "test:lsp": "yarn compile:integration && jasmine --config=integration/lsp/jasmine.json",
    "test:e2e": "yarn compile:integration && ./scripts/e2e.sh",
    "test:syntaxes": "yarn compile:syntaxes-test && yarn build:syntaxes && jasmine dist/syntaxes/test/driver.js"
  },
  "dependencies": {
    "@angular/language-service": "12.0.0-next.2",
    "typescript": "4.1.5",
    "vscode-jsonrpc": "6.0.0",
    "vscode-languageclient": "7.0.0",
    "vscode-languageserver": "7.0.0",
    "vscode-uri": "3.0.2"
  },
  "devDependencies": {
    "@types/jasmine": "3.6.4",
    "@types/node": "12.20.4",
    "clang-format": "1.5.0",
    "jasmine": "3.6.4",
    "prettier": "2.2.1",
    "rollup": "2.40.0",
    "rollup-plugin-commonjs": "10.1.0",
    "tslint": "6.1.3",
    "tslint-eslint-rules": "5.4.0",
    "vsce": "1.85.1",
    "vscode": "1.1.37",
    "vscode-languageserver-protocol": "3.16.0",
    "vscode-tmgrammar-test": "0.0.10"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/angular/vscode-ng-language-service"
  }
}
