>@defer (doSomething({111})) {
#^ template.blocks.ng keyword.control.block.transition.ng
# ^^^^^^ template.blocks.ng keyword.control.block.kind.ng
#       ^ template.blocks.ng control.block.ng meta.brace.round.ts
#        ^^^^^^^^^^^^^^^^^^ template.blocks.ng control.block.ng control.block.expression.ng
#                          ^ template.blocks.ng control.block.ng meta.brace.round.ts
#                           ^ template.blocks.ng control.block.ng
#                            ^ template.blocks.ng control.block.ng punctuation.definition.block.ts
>    <a></a>
#^^^^^^^^^^^^ template.blocks.ng control.block.ng control.block.body.ng
>}
#^ template.blocks.ng control.block.ng punctuation.definition.block.ts
>
>@defer {
#^ template.blocks.ng keyword.control.block.transition.ng
# ^^^^^^ template.blocks.ng keyword.control.block.kind.ng
#       ^ template.blocks.ng control.block.ng punctuation.definition.block.ts
>    <a></a>
#^^^^^^^^^^^^ template.blocks.ng control.block.ng control.block.body.ng
>}
#^ template.blocks.ng control.block.ng punctuation.definition.block.ts
>
>@switch (a) {
#^ template.blocks.ng keyword.control.block.transition.ng
# ^^^^^^^ template.blocks.ng keyword.control.block.kind.ng
#        ^ template.blocks.ng control.block.ng meta.brace.round.ts
#         ^ template.blocks.ng control.block.ng control.block.expression.ng
#          ^ template.blocks.ng control.block.ng meta.brace.round.ts
#           ^ template.blocks.ng control.block.ng
#            ^ template.blocks.ng control.block.ng punctuation.definition.block.ts
>    @case (1) {
#^^^^^^^^^^^^^^^^ template.blocks.ng control.block.ng control.block.body.ng
>        {{getCase1()}}
#^^^^^^^^^^^^^^^^^^^^ template.blocks.ng control.block.ng control.block.body.ng
#                    ^ template.blocks.ng control.block.ng punctuation.definition.block.ts
#                     ^^ template.blocks.ng
>    }
#^^^^^^ template.blocks.ng
>    @case (2) {
#^^^^ template.blocks.ng
#    ^ template.blocks.ng keyword.control.block.transition.ng
#     ^^^^^ template.blocks.ng keyword.control.block.kind.ng
#          ^ template.blocks.ng control.block.ng meta.brace.round.ts
#           ^ template.blocks.ng control.block.ng control.block.expression.ng
#            ^ template.blocks.ng control.block.ng meta.brace.round.ts
#             ^ template.blocks.ng control.block.ng
#              ^ template.blocks.ng control.block.ng punctuation.definition.block.ts
>        {{a.b.c}}
#^^^^^^^^^^^^^^^ template.blocks.ng control.block.ng control.block.body.ng
#               ^ template.blocks.ng control.block.ng punctuation.definition.block.ts
#                ^^ template.blocks.ng
>    }
#^^^^^^ template.blocks.ng
>    @default {
#^^^^ template.blocks.ng
#    ^ template.blocks.ng keyword.control.block.transition.ng
#     ^^^^^^^^ template.blocks.ng keyword.control.block.kind.ng
#             ^ template.blocks.ng control.block.ng punctuation.definition.block.ts
>        default case
#^^^^^^^^^^^^^^^^^^^^^ template.blocks.ng control.block.ng control.block.body.ng
>    }
#^^^^ template.blocks.ng control.block.ng control.block.body.ng
#    ^ template.blocks.ng control.block.ng punctuation.definition.block.ts
>}
#^^ template.blocks.ng
>
>@if (a==b) { hello } @else  { goodbye }
#^ template.blocks.ng keyword.control.block.transition.ng
# ^^^ template.blocks.ng keyword.control.block.kind.ng
#    ^ template.blocks.ng control.block.ng meta.brace.round.ts
#     ^^^^ template.blocks.ng control.block.ng control.block.expression.ng
#         ^ template.blocks.ng control.block.ng meta.brace.round.ts
#          ^ template.blocks.ng control.block.ng
#           ^ template.blocks.ng control.block.ng punctuation.definition.block.ts
#            ^^^^^^^ template.blocks.ng control.block.ng control.block.body.ng
#                   ^ template.blocks.ng control.block.ng punctuation.definition.block.ts
#                    ^ template.blocks.ng
#                     ^ template.blocks.ng keyword.control.block.transition.ng
#                      ^^^^^^ template.blocks.ng keyword.control.block.kind.ng
#                            ^ template.blocks.ng control.block.ng punctuation.definition.block.ts
#                             ^^^^^^^^^ template.blocks.ng control.block.ng control.block.body.ng
#                                      ^ template.blocks.ng control.block.ng punctuation.definition.block.ts
>
>@if (a==b) { 
#^ template.blocks.ng keyword.control.block.transition.ng
# ^^^ template.blocks.ng keyword.control.block.kind.ng
#    ^ template.blocks.ng control.block.ng meta.brace.round.ts
#     ^^^^ template.blocks.ng control.block.ng control.block.expression.ng
#         ^ template.blocks.ng control.block.ng meta.brace.round.ts
#          ^ template.blocks.ng control.block.ng
#           ^ template.blocks.ng control.block.ng punctuation.definition.block.ts
#            ^^ template.blocks.ng control.block.ng control.block.body.ng
>    hello 
#^^^^^^^^^^^ template.blocks.ng control.block.ng control.block.body.ng
>} @else if (b==a) { 
#^ template.blocks.ng control.block.ng punctuation.definition.block.ts
# ^ template.blocks.ng
#  ^ template.blocks.ng keyword.control.block.transition.ng
#   ^^^^^^^^ template.blocks.ng keyword.control.block.kind.ng
#           ^ template.blocks.ng control.block.ng meta.brace.round.ts
#            ^^^^ template.blocks.ng control.block.ng control.block.expression.ng
#                ^ template.blocks.ng control.block.ng meta.brace.round.ts
#                 ^ template.blocks.ng control.block.ng
#                  ^ template.blocks.ng control.block.ng punctuation.definition.block.ts
#                   ^^ template.blocks.ng control.block.ng control.block.body.ng
>    goodbye 
#^^^^^^^^^^^^^ template.blocks.ng control.block.ng control.block.body.ng
>}
#^ template.blocks.ng control.block.ng punctuation.definition.block.ts
>
>@for (let item of items; as thing; trackBy: $index) {
#^ template.blocks.ng keyword.control.block.transition.ng
# ^^^^ template.blocks.ng keyword.control.block.kind.ng
#     ^ template.blocks.ng control.block.ng meta.brace.round.ts
#      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ template.blocks.ng control.block.ng control.block.expression.ng
#                                                  ^ template.blocks.ng control.block.ng meta.brace.round.ts
#                                                   ^ template.blocks.ng control.block.ng
#                                                    ^ template.blocks.ng control.block.ng punctuation.definition.block.ts
>    {{item}}
#^^^^^^^^^^ template.blocks.ng control.block.ng control.block.body.ng
#          ^ template.blocks.ng control.block.ng punctuation.definition.block.ts
#           ^^ template.blocks.ng
>}
#^^ template.blocks.ng
>