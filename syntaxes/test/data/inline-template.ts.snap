>/* clang-format off */
#^^^^^^^^^^^^^^^^^^^^^^^ inline-template.ng
>
>/* Inline template recognition tests */
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ inline-template.ng
>@Component({
#^^^^^^^^^^^^^ inline-template.ng
>  //// Property key/value test
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ inline-template.ng
>  template: '<div></div>',
#^^ inline-template.ng
#  ^^^^^^^^ inline-template.ng meta.object-literal.key.ts
#          ^ inline-template.ng meta.object-literal.key.ts punctuation.separator.key-value.ts
#           ^ inline-template.ng
#            ^ inline-template.ng string
#             ^^^^^^^^^^^ inline-template.ng text.html
#                        ^ inline-template.ng string
#                         ^^ inline-template.ng
>
>  //// String delimiter tests
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ inline-template.ng
>  template: `<div></div>`,
#^^ inline-template.ng
#  ^^^^^^^^ inline-template.ng meta.object-literal.key.ts
#          ^ inline-template.ng meta.object-literal.key.ts punctuation.separator.key-value.ts
#           ^ inline-template.ng
#            ^ inline-template.ng string
#             ^^^^^^^^^^^ inline-template.ng text.html
#                        ^ inline-template.ng string
#                         ^^ inline-template.ng
>  template: "<div></div>",
#^^ inline-template.ng
#  ^^^^^^^^ inline-template.ng meta.object-literal.key.ts
#          ^ inline-template.ng meta.object-literal.key.ts punctuation.separator.key-value.ts
#           ^ inline-template.ng
#            ^ inline-template.ng string
#             ^^^^^^^^^^^ inline-template.ng text.html
#                        ^ inline-template.ng string
#                         ^^ inline-template.ng
>  template: '<div></div>',
#^^ inline-template.ng
#  ^^^^^^^^ inline-template.ng meta.object-literal.key.ts
#          ^ inline-template.ng meta.object-literal.key.ts punctuation.separator.key-value.ts
#           ^ inline-template.ng
#            ^ inline-template.ng string
#             ^^^^^^^^^^^ inline-template.ng text.html
#                        ^ inline-template.ng string
#                         ^^ inline-template.ng
>
>  //// Parenthesization tests
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ inline-template.ng
>  template: ( (( '<div></div>' )) ),
#^^ inline-template.ng
#  ^^^^^^^^ inline-template.ng meta.object-literal.key.ts
#          ^ inline-template.ng meta.object-literal.key.ts punctuation.separator.key-value.ts
#           ^ inline-template.ng
#            ^ inline-template.ng meta.brace.round.ts
#             ^ inline-template.ng
#              ^ inline-template.ng meta.brace.round.ts
#               ^ inline-template.ng meta.brace.round.ts
#                ^ inline-template.ng
#                 ^ inline-template.ng string
#                  ^^^^^^^^^^^ inline-template.ng text.html
#                             ^ inline-template.ng string
#                              ^ inline-template.ng
#                               ^ inline-template.ng meta.brace.round.ts
#                                ^ inline-template.ng meta.brace.round.ts
#                                 ^ inline-template.ng
#                                  ^ inline-template.ng meta.brace.round.ts
#                                   ^^ inline-template.ng
>
>  //// Comments tests
#^^^^^^^^^^^^^^^^^^^^^^ inline-template.ng
>  // template: '<div></div>'
#^^^^^ inline-template.ng
#     ^^^^^^^^ inline-template.ng meta.object-literal.key.ts
#             ^ inline-template.ng meta.object-literal.key.ts punctuation.separator.key-value.ts
#              ^ inline-template.ng
#               ^ inline-template.ng string
#                ^^^^^^^^^^^ inline-template.ng text.html
#                           ^ inline-template.ng string
>  /*
#^^^^^ inline-template.ng
>   * template: '<div></div>'
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ inline-template.ng
>   */
#^^^^^^ inline-template.ng
>  /**
#^^^^^^ inline-template.ng
>   * template: '<div></div>'
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ inline-template.ng
>   */
#^^^^^^ inline-template.ng
>})
#^^^ inline-template.ng
>export class TMComponent{}
#^^^^^^^^^^^^^^^^^^^^^^^^^^^ inline-template.ng
>
>/* Template syntax tests */
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^ inline-template.ng
>@Component({
#^^^^^^^^^^^^^ inline-template.ng
>  // Interpolation test
#^^^^^^^^^^^^^^^^^^^^^^^^ inline-template.ng
>  template: '{{property}}',
#^^ inline-template.ng
#  ^^^^^^^^ inline-template.ng meta.object-literal.key.ts
#          ^ inline-template.ng meta.object-literal.key.ts punctuation.separator.key-value.ts
#           ^ inline-template.ng
#            ^ inline-template.ng string
#             ^^ inline-template.ng text.html punctuation.definition.block.ts
#               ^^^^^^^^ inline-template.ng text.html expression.ng variable.other.readwrite.ts
#                       ^^ inline-template.ng text.html punctuation.definition.block.ts
#                         ^ inline-template.ng string
#                          ^^ inline-template.ng
>})
#^^^ inline-template.ng
>export class TMComponent{}
#^^^^^^^^^^^^^^^^^^^^^^^^^^^ inline-template.ng
>
>@Component({
#^^^^^^^^^^^^^ inline-template.ng
>  template: `
#^^ inline-template.ng
#  ^^^^^^^^ inline-template.ng meta.object-literal.key.ts
#          ^ inline-template.ng meta.object-literal.key.ts punctuation.separator.key-value.ts
#           ^ inline-template.ng
#            ^ inline-template.ng string
>    <ng-container *ngFor="let el of [1,2,3,4]; template: myTpl"></ng-template>
#^^^^^^^^^^^^^^^^^^ inline-template.ng text.html
#                  ^ inline-template.ng text.html meta.ng-binding.template.html entity.other.attribute-name.html entity.other.ng-binding-name.template.html punctuation.definition.ng-binding-name.begin.html
#                   ^^^^^ inline-template.ng text.html meta.ng-binding.template.html entity.other.attribute-name.html entity.other.ng-binding-name.template.html entity.other.ng-binding-name.ngFor.html
#                        ^ inline-template.ng text.html meta.ng-binding.template.html punctuation.separator.key-value.html
#                         ^ inline-template.ng text.html meta.ng-binding.template.html string.quoted.html punctuation.definition.string.begin.html
#                          ^^^ inline-template.ng text.html meta.ng-binding.template.html expression.ng storage.type.ts
#                             ^ inline-template.ng text.html meta.ng-binding.template.html expression.ng
#                              ^^ inline-template.ng text.html meta.ng-binding.template.html expression.ng variable.other.readwrite.ts
#                                ^ inline-template.ng text.html meta.ng-binding.template.html expression.ng
#                                 ^^ inline-template.ng text.html meta.ng-binding.template.html expression.ng keyword.operator.expression.of.ts
#                                   ^ inline-template.ng text.html meta.ng-binding.template.html expression.ng
#                                    ^ inline-template.ng text.html meta.ng-binding.template.html expression.ng meta.array.literal.ts meta.brace.square.ts
#                                     ^ inline-template.ng text.html meta.ng-binding.template.html expression.ng meta.array.literal.ts constant.numeric.decimal.ts
#                                      ^ inline-template.ng text.html meta.ng-binding.template.html expression.ng meta.array.literal.ts punctuation.separator.comma.ts
#                                       ^ inline-template.ng text.html meta.ng-binding.template.html expression.ng meta.array.literal.ts constant.numeric.decimal.ts
#                                        ^ inline-template.ng text.html meta.ng-binding.template.html expression.ng meta.array.literal.ts punctuation.separator.comma.ts
#                                         ^ inline-template.ng text.html meta.ng-binding.template.html expression.ng meta.array.literal.ts constant.numeric.decimal.ts
#                                          ^ inline-template.ng text.html meta.ng-binding.template.html expression.ng meta.array.literal.ts punctuation.separator.comma.ts
#                                           ^ inline-template.ng text.html meta.ng-binding.template.html expression.ng meta.array.literal.ts constant.numeric.decimal.ts
#                                            ^ inline-template.ng text.html meta.ng-binding.template.html expression.ng meta.array.literal.ts meta.brace.square.ts
#                                             ^^ inline-template.ng text.html meta.ng-binding.template.html expression.ng
#                                               ^^^^^^^^ inline-template.ng text.html meta.ng-binding.template.html expression.ng variable.other.readwrite.ts
#                                                       ^^ inline-template.ng text.html meta.ng-binding.template.html expression.ng
#                                                         ^^^^^ inline-template.ng text.html meta.ng-binding.template.html expression.ng variable.other.readwrite.ts
#                                                              ^ inline-template.ng text.html meta.ng-binding.template.html string.quoted.html punctuation.definition.string.end.html
#                                                               ^^^^^^^^^^^^^^^^ inline-template.ng text.html
>  `,
#^^ inline-template.ng text.html
#  ^ inline-template.ng string
#   ^^ inline-template.ng
>})
#^^^ inline-template.ng
>export class TMComponent{}
#^^^^^^^^^^^^^^^^^^^^^^^^^^^ inline-template.ng
>